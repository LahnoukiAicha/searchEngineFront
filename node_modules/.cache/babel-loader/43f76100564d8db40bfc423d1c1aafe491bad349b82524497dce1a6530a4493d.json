{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\moteur-recherche-educative\\\\src\\\\components\\\\SearchResults.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchResults = () => {\n  _s();\n  const {\n    query\n  } = useParams();\n  const [results, setResults] = useState([]);\n  useEffect(() => {\n    // Ici, vous allez appeler l'API ou charger les données\n    const fetchData = async () => {\n      // Exemple : récupérer les résultats depuis une API (ici un mock)\n      const response = await fetch(`https://api.example.com/search?q=${query}`);\n      const data = await response.json();\n      setResults(data);\n    };\n    fetchData();\n  }, [query]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"R\\xE9sultats pour : \", query]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: results.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), item.type === 'image' && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.url,\n          alt: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 39\n        }, this), item.type === 'video' && /*#__PURE__*/_jsxDEV(\"video\", {\n          controls: true,\n          src: item.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 39\n        }, this), item.type === 'text' && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 38\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchResults, \"XiJjnY/lJOqqTdUcnRRGwGx45Ds=\", false, function () {\n  return [useParams];\n});\n_c = SearchResults;\nexport default SearchResults;\nvar _c;\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","SearchResults","_s","query","results","setResults","fetchData","response","fetch","data","json","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","title","type","src","url","alt","controls","content","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/moteur-recherche-educative/src/components/SearchResults.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst SearchResults = () => {\r\n  const { query } = useParams();\r\n  const [results, setResults] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Ici, vous allez appeler l'API ou charger les données\r\n    const fetchData = async () => {\r\n      // Exemple : récupérer les résultats depuis une API (ici un mock)\r\n      const response = await fetch(`https://api.example.com/search?q=${query}`);\r\n      const data = await response.json();\r\n      setResults(data);\r\n    };\r\n\r\n    fetchData();\r\n  }, [query]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Résultats pour : {query}</h1>\r\n      <div>\r\n        {results.map((item, index) => (\r\n          <div key={index}>\r\n            <h3>{item.title}</h3>\r\n            {item.type === 'image' && <img src={item.url} alt={item.title} />}\r\n            {item.type === 'video' && <video controls src={item.url}></video>}\r\n            {item.type === 'text' && <p>{item.content}</p>}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAM,CAAC,GAAGL,SAAS,CAAC,CAAC;EAC7B,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoCL,KAAK,EAAE,CAAC;MACzE,MAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCL,UAAU,CAACI,IAAI,CAAC;IAClB,CAAC;IAEDH,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC;EAEX,oBACEH,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,GAAI,sBAAiB,EAACR,KAAK;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACjCf,OAAA;MAAAW,QAAA,EACGP,OAAO,CAACY,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACvBlB,OAAA;QAAAW,QAAA,gBACEX,OAAA;UAAAW,QAAA,EAAKM,IAAI,CAACE;QAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACpBE,IAAI,CAACG,IAAI,KAAK,OAAO,iBAAIpB,OAAA;UAAKqB,GAAG,EAAEJ,IAAI,CAACK,GAAI;UAACC,GAAG,EAAEN,IAAI,CAACE;QAAM;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAChEE,IAAI,CAACG,IAAI,KAAK,OAAO,iBAAIpB,OAAA;UAAOwB,QAAQ;UAACH,GAAG,EAAEJ,IAAI,CAACK;QAAI;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAChEE,IAAI,CAACG,IAAI,KAAK,MAAM,iBAAIpB,OAAA;UAAAW,QAAA,EAAIM,IAAI,CAACQ;QAAO;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAJtCG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACb,EAAA,CA/BID,aAAa;EAAA,QACCH,SAAS;AAAA;AAAA4B,EAAA,GADvBzB,aAAa;AAiCnB,eAAeA,aAAa;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}